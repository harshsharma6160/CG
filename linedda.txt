#include<stdio.h>
#include<math.h>
#include<gl/glut.h>
void init()
{
	glClearColor(0.0, 0.0, 0.0, 0.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0.0, 200.0, 0.0, 150.0);
}
void helper(int x1, int y1, int x2, int y2)
{
	int dx,dy;

	dx = x2 - x1;
	dy = y2 - y1;

	float steps = abs(dx) > abs(dy) ? abs(dx) : abs(dy);

	float xinc = dx / float(steps);
	float yinc = dy / float(steps);

	float x = x1;
	float y = y1;

	glBegin(GL_POINTS);

	for (int i = 0; i <= steps; i++)
	{
		glVertex2i(x, y);
		x += xinc;
		y += yinc;
	}
	glEnd();
	glFlush();
}
void display()
{
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(1.0, 1.0, 1.0);

	helper(100,100,150,100);

	
}
int main(int argc , char ** argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowPosition(40, 100);
	glutInitWindowSize(500, 400); 
	glutCreateWindow("DDA");
	init();
	glutDisplayFunc(display); 
	glutMainLoop();
	return 0;
}
