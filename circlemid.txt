#include<stdio.h>
#include<math.h>
#include<gl/glut.h>
void init()
{
	glClearColor(0.0, 0.0, 0.0, 0.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0.0, 250.0, 0.0, 250.0);
}
void helper(int xc , int yc , int r)
{
	int x = 0;
	int y = r;
	int decision = 1 - r;

	glBegin(GL_POINTS);

	while (x <= y)
	{
		glVertex2i(xc + x, yc + y);
		glVertex2i(xc + x, yc - y);
		glVertex2i(xc - x, yc + y);
		glVertex2i(xc - x, yc - y);
		glVertex2i(xc + y, yc + x);
		glVertex2i(xc + y, yc - x);
		glVertex2i(xc - y, yc + x);
		glVertex2i(xc - y, yc - x);

		if (decision < 0)
		{
			decision = decision + 2 * x + 6;
		}
		else
		{
			y--;
			decision = decision + 2 * (x-y) + 5;
		}
		x++;
	}
	glEnd();
	glFlush();
}
void display()
{
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(1.0, 1.0, 1.0);

	helper(50, 50, 20);

}
int main(int argc, char** argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowPosition(40, 100);
	glutInitWindowSize(500, 400);
	glutCreateWindow("Circle");
	init();
	glutDisplayFunc(display);
	glutMainLoop();
	return 0;
}
